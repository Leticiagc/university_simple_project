{{>licenseInfo}}

package {{package}};

import {{invokerPackage}}.ApiException;
{{#imports}}import {{import}};
{{/imports}}

{{#junitTest}}
import org.junit.jupiter.api.Test;
import org.junit.Ignore;
import org.junit.Assert;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.params.ParameterizedTest;
import org.junit.jupiter.params.provider.Arguments;
import org.junit.jupiter.params.provider.MethodSource;
{{/junitTest}}

import java.time.LocalDate;
import java.time.OffsetDateTime;
{{^fullJavaUtil}}
    import java.util.ArrayList;
    import java.util.HashMap;
    import java.util.List;
    import java.util.Map;

{{/fullJavaUtil}}

{{#spring}}
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.autoconfigure.EnableAutoConfiguration;
import org.springframework.boot.test.autoconfigure.web.servlet.AutoConfigureMockMvc;
import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.web.servlet.MockMvc;
import org.springframework.util.LinkedMultiValueMap;
{{/spring}}

/**
* API tests for {{classname}}
*/
public class {{classname}}Test {
private final {{classname}} api = new {{classname}}();
{{>generatedAnnotation}}
@SpringBootTest
{{#operations}}
    {{operation}}
    public class {{classname}} {
        @Autowired
        private MockMvc mockMvc;

        @Autowired
        private MockTest mockTest;

        @Test
        @ParameterizedTest
        public void {{operationId}}Test() throws ApiException {
        {{#allParams}}

            //{{{dataType}}} {{paramName}} = null;
        {{/allParams}}
        //{{#returnType}}{{{.}}} response = {{/returnType}}api.{{operationId}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});

        // TODO: test validations
        }

        * @throws ApiException
        *          if the Api call fails
        */
        @Test
        @ParameterizedTest
        public void {{operationExceptionId}}Test() throws ApiException {
        //{{#allParams}}
            //{{{dataType}}} {{paramName}} = null;
            //{{/allParams}}
        //{{#returnType}}{{{.}}} response = {{/returnType}}api.{{operationId}}({{#allParams}}{{paramName}}{{^-last}}, {{/-last}}{{/allParams}});

        // TODO: test validations
        }
    }
    {{operation}}
{{/operations}}